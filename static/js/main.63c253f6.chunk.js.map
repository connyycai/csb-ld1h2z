{"version":3,"sources":["contexts/AuthContext.js","components/Layouts/DefaultLayout.js","components/Layouts/FullScreenLayout.js","pages/HomePage.js","pages/LoginPage.js","App.js","index.js"],"names":["AuthContext","createContext","useProvideAuth","navigate","useNavigate","useState","window","localStorage","getItem","loggedIn","setLoggedIn","values","form","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","email","password","then","data","status","json","Error","setItem","username","token","catch","err","console","log","login","logout","clear","useStyles","createStyles","theme","_params","getRef","appShellMain","minHeight","display","flexDirection","marginTop","header","backgroundColor","primaryColor","headerGroup","height","alignItems","margin","color","DefaultLayout","classes","auth","useContext","name","HeaderContent","Group","className","position","Title","Button","variant","onClick","AppShell","Header","p","fixed","classNames","main","to","replace","AppShellRoot","AppShellBody","AppShellMain","padding","FullscreenLayout","props","root","HomePage","finished","tasks","setTasks","taskName","setTaskName","Stack","align","justify","unfinishedTasks","forEach","task","order","getSummary","Input","value","placeholder","onChange","event","target","rightIcon","includes","alert","concat","completed","map","index","Checkbox","checked","label","inputWrapper","width","LoginPage","useForm","initialValues","validate","test","onSubmit","TextInput","wrapper","required","getInputProps","PasswordInput","type","App","Provider","path","element","rootElement","document","getElementById","createRoot","render","MantineProvider","colors","Global","styles","boxSizing","border","verticalAlign"],"mappings":"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","file":"static/js/main.63c253f6.chunk.js","sourcesContent":["// based on the tutorial from https://usehooks.com/useAuth/\n\nimport { createContext, useState } from \"react\";\n// a bug with this hook prevented me from using it ðŸ˜¢\n// import { useLocalStorage } from \"@mantine/hooks\";\nimport { useNavigate } from \"react-router-dom\";\n\nlet AuthContext = createContext();\nexport { AuthContext as default };\n\n// Provider hook that creates auth object and handles state\nexport function useProvideAuth() {\n  const navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(\n    window.localStorage.getItem(\"loggedIn\") === \"true\"\n  );\n\n  async function login(values, form) {\n    await fetch(\"https://tpeo-todo.herokuapp.com/auth/login\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify({ email: values.email, password: values.password }) // body data type must match \"Content-Type\" header\n    })\n      .then((data) => {\n        if (data.status === 200) {\n          const json = data.json();\n          return json;\n        } else {\n          throw Error(\"Invalid\");\n        }\n      })\n      .then((json) => {\n        setLoggedIn(true);\n        window.localStorage.setItem(\"loggedIn\", true);\n        window.localStorage.setItem(\"username\", json.username);\n        window.localStorage.setItem(\"token\", json.token); // Should be sent upon subsequent requests\n        navigate(\"../\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function logout() {\n    window.localStorage.clear();\n    setLoggedIn(false);\n  }\n\n  return {\n    loggedIn,\n    login,\n    logout\n  };\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Footer,\n  Aside,\n  Text,\n  MediaQuery,\n  Burger,\n  createStyles,\n  useMantineTheme,\n  Group,\n  Title,\n  Button\n} from \"@mantine/core\";\nimport { NavLink, Outlet, Navigate } from \"react-router-dom\";\nimport AuthContext from \"../../contexts/AuthContext\";\n\nconst headerHeight = 80;\n\nconst useStyles = createStyles((theme, _params, getRef) => {\n  return {\n    appShellMain: {\n      minHeight: `calc(100vh - ${headerHeight}px)`,\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginTop: `${headerHeight}px`\n    },\n    header: {\n      backgroundColor: theme.primaryColor\n    },\n    headerGroup: {\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      margin: 0,\n      color: theme.primaryColor\n    }\n  };\n});\n\nexport default function DefaultLayout() {\n  const { classes } = useStyles();\n  const auth = useContext(AuthContext);\n  const [name, setName] = useState(window.localStorage.getItem(\"username\"));\n\n  const HeaderContent = (\n    <Group className={classes.headerGroup} position=\"apart\">\n      <Title>{name}'s Todo App</Title>\n      <Group>\n        <Button variant=\"light\" color=\"red\" onClick={() => auth.logout()}>\n          Logout\n        </Button>\n      </Group>\n    </Group>\n  );\n\n  return (\n    <AppShell\n      header={\n        <Header className={classes.header} height={headerHeight} p=\"md\" fixed>\n          {HeaderContent}\n        </Header>\n      }\n      classNames={{\n        main: classes.appShellMain\n      }}\n    >\n      {\n        // sends user to login screen whenever the user is logged out\n        // based off the tutorial here: https://blog.utsavkumar.tech/private-routes-in-react-router-v6\n        auth.loggedIn ? <Outlet></Outlet> : <Navigate to=\"/login\" replace />\n      }\n    </AppShell>\n  );\n}\n","import { createStyles, Global, AppShell } from \"@mantine/core\";\nimport { Outlet } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme, _params, getRef) => {\n  return {\n    AppShellRoot: {\n      minHeight: \"100vh\",\n      height: \"100vh\"\n    },\n    AppShellBody: {\n      height: \"100%\"\n    },\n    AppShellMain: {\n      height: \"100%\",\n      padding: 0\n    }\n  };\n});\n\nexport default function FullscreenLayout(props) {\n  const { classes } = useStyles();\n\n  return (\n    <>\n      <AppShell\n        classNames={{\n          root: classes.AppShellRoot,\n          body: classes.AppShellBody,\n          main: classes.AppShellMain\n        }}\n      >\n        <Outlet></Outlet>\n      </AppShell>\n    </>\n  );\n}\n","import { useEffect, useState, Fragment } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\n\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Footer,\n  Aside,\n  Text,\n  MediaQuery,\n  Burger,\n  createStyles,\n  useMantineTheme,\n  Group,\n  Center,\n  Stack,\n  Input,\n  Button,\n  Checkbox,\n  Title\n} from \"@mantine/core\";\n\nexport default function HomePage() {\n  // toDo: an array of tasks that need to be done; setToDo: a function that allows you to modify the task variable.\n  const [tasks, setTasks] = useState([\n    { name: \"create a todo app\", finished: false },\n    { name: \"wear a mask\", finished: false },\n    { name: \"play roblox\", finished: false },\n    { name: \"be a winner\", finished: true },\n    { name: \"become a tech bro\", finished: true }\n  ]);\n\n  // taskName: a string of the name of task that you want to add; setToDo: a function that allows you to edit the taskName\n  const [taskName, setTaskName] = useState(\"\");\n\n  // addTask: adds a task to toDo by adding the taskName\n  function addTask() {\n    // makes sure that taskName is not blank\n    if (taskName) {\n      // makes sure that taskName is a new task\n      tasks.includes(taskName)\n        ? alert(\"Task already exists\")\n        : setTasks(tasks.concat({ name: taskName, completed: false }));\n      setTaskName(\"\");\n    }\n  }\n\n  function updateTask(name) {\n    setTasks(\n      tasks.map((task) => {\n        if (task.name === name) {\n          task.finished = !task.finished;\n        }\n        return task;\n      })\n    );\n  }\n\n  function getSummary() {\n    let unfinishedTasks = 0;\n    tasks.forEach((task) => {\n      if (task.finished === false) {\n        unfinishedTasks += 1;\n      }\n    });\n    if (unfinishedTasks === 1) {\n      return <Title order={2}>You have 1 unfinished task</Title>;\n    } else if (unfinishedTasks >= 1) {\n      return (\n        <Title order={2}>You have {unfinishedTasks} tasks left to do</Title>\n      );\n    }\n  }\n\n  return (\n    <Stack align=\"center\" justify=\"center\" p=\"xl\">\n      {getSummary()}\n      <Group>\n        <Input\n          value={taskName}\n          placeholder=\"Type your task here\"\n          onChange={(event) => setTaskName(event.target.value)}\n        ></Input>\n        <Button rightIcon={<FaPlus />} onClick={() => addTask()}>\n          Add\n        </Button>\n      </Group>\n      <Stack>\n        {tasks.map((task, index) => (\n          <Checkbox\n            checked={task.finished}\n            key={task.name}\n            index={index}\n            label={task.name}\n            onChange={() => updateTask(task.name)}\n          ></Checkbox>\n        ))}\n      </Stack>\n    </Stack>\n  );\n}\n","import { useEffect, useState, Fragment, useContext } from \"react\";\nimport { useForm } from \"@mantine/form\";\nimport AuthContext from \"../contexts/AuthContext\";\n\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Footer,\n  Aside,\n  Text,\n  MediaQuery,\n  Burger,\n  createStyles,\n  useMantineTheme,\n  Group,\n  Center,\n  Stack,\n  Input,\n  Button,\n  Checkbox,\n  TextInput,\n  PasswordInput,\n  Title\n} from \"@mantine/core\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createStyles((theme, _params, getRef) => {\n  return {\n    inputWrapper: {\n      width: 250\n    }\n  };\n});\n\nexport default function LoginPage() {\n  const auth = useContext(AuthContext);\n  const { classes } = useStyles();\n\n  const form = useForm({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: {\n      // checks to see if the value is in the form of a an email\n      email: (value) => (/^\\S+@\\S+$/.test(value) ? null : \"Invalid email\")\n    }\n  });\n\n  function handleSubmit(values) {\n    console.log(form, values);\n    auth.login(values, form);\n  }\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit)}>\n      <Stack align=\"center\" justify=\"center\" p=\"xl\">\n        <Title order={1}>Login</Title>\n        <TextInput\n          classNames={{ wrapper: classes.inputWrapper }}\n          required\n          label=\"Email\"\n          placeholder=\"tpeorocks@roblox.com\"\n          {...form.getInputProps(\"email\")}\n        />\n        <PasswordInput\n          classNames={{ wrapper: classes.inputWrapper }}\n          placeholder=\"angularbad\"\n          label=\"Password\"\n          required\n          {...form.getInputProps(\"password\")}\n        />\n        <Group position=\"center\">\n          <Button type=\"submit\">Login</Button>\n        </Group>\n      </Stack>\n    </form>\n  );\n}\n","import { Routes, Route } from \"react-router-dom\";\nimport DefaultLayout from \"./components/Layouts/DefaultLayout\";\nimport FullScreenLayout from \"./components/Layouts/FullScreenLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport AuthContext, { useProvideAuth } from \"./contexts/AuthContext\";\n\nfunction App() {\n  return (\n    <AuthContext.Provider value={useProvideAuth()}>\n      <Routes>\n        <Route path=\"/\" element={<DefaultLayout></DefaultLayout>}>\n          <Route index element={<HomePage></HomePage>}></Route>\n        </Route>\n        <Route path=\"/login\" element={<FullScreenLayout></FullScreenLayout>}>\n          <Route index element={<LoginPage></LoginPage>}></Route>\n        </Route>\n      </Routes>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { MantineProvider, Global } from \"@mantine/core\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    {/* sets up theming and global styles for Mantine */}\n    <MantineProvider\n      theme={{\n        colors: {\n          \"longhorn-orange\": [\n            \"#E8E1DA\",\n            \"#DBCCBE\",\n            \"#D2B9A1\",\n            \"#CFA783\",\n            \"#D29761\",\n            \"#DC883C\",\n            \"#ED7A11\",\n            \"#C26F23\",\n            \"#A0642E\",\n            \"#865B34\",\n            \"#715236\",\n            \"#604A36\",\n            \"#534334\"\n          ]\n        },\n        primaryColor: \"longhorn-orange\"\n      }}\n    >\n      <Global\n        styles={() => ({\n          \"*, *::before, *::after\": {\n            boxSizing: \"border-box\"\n          },\n          // this is adaptation of CSS reset to override user agent stylesheets\n          // https://meyerweb.com/eric/tools/css/reset/\n          \"html, body, div, span, applet, object, iframe, \\\n          h1, h2, h3, h4, h5, h6, p, blockquote, pre, \\\n          a, abbr, acronym, address, big, cite, code, \\\n          del, dfn, em, img, ins, kbd, q, s, samp, \\\n          small, strike, strong, sub, sup, tt, var, \\\n          b, u, i, center, \\\n          dl, dt, dd, ol, ul, li, \\\n          fieldset, form, label, legend, \\\n          table, caption, tbody, tfoot, thead, tr, th, td, \\\n          article, aside, canvas, details, embed, \\\n          figure, figcaption, footer, header, hgroup, \\\n          menu, nav, output, ruby, section, summary, \\\n          time, mark, audio, video\": {\n            margin: 0,\n            padding: 0,\n            border: 0,\n            verticalAlign: \"baseline\"\n          }\n        })}\n      />\n      {/* sets up React Router */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </MantineProvider>\n  </StrictMode>\n);\n"],"sourceRoot":""}